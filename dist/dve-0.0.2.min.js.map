{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.coffee","dve-0.0.2.min.js","display/data.coffee","display/mount.coffee","display/report.coffee","display/space.coffee","display/title.coffee","node_modules/colorbrewer/colorbrewer.js","node_modules/colorbrewer/index.js","node_modules/d3/d3.js","node_modules/moment/moment.js","time/chart.coffee","time/dayheadings.coffee","time/direction.coffee","time/line.coffee","time/scatter.coffee","time/tablebytime.coffee","time/timeheadings.coffee","util/debounce.coffee","util/hub.coffee","util/neighbours.coffee","util/windowdimensions.coffee","xy/histogram.coffee","xy/table.coffee","xy/windrose.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","dve","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"mount","title","space","data","report","timeheadings","dayheadings","chart","tablebytime","line","scatter","direction","histogram","table","windrose","./display/data","./display/mount","./display/report","./display/space","./display/title","./time/chart","./time/dayheadings","./time/direction","./time/line","./time/scatter","./time/tablebytime","./time/timeheadings","./xy/histogram","./xy/table","./xy/windrose",2,"createhub","d3","moment","dom","options","components","dimensions","items","spec","csv","source","url","error","d","domain","durationformats","end","fn","fn1","hub","j","k","len","len1","len2","name","parse","parse_duration","parse_end","parse_start","parse_time","poi","ref","ref1","start","target","timeRegex","value","translate","include","filter","key","shouldinclude","exclude","shouldexclude","time","utc","ISO_8601","timeformat","extent","display","str","duration","offset","offsetunit","sign","substr","timestamp","add","second","startOf","minute","hour","day","week","month","year","localsecond","localminute","localhour","localday","localweek","localmonth","localyear","slice","indexOf","isBetween","type","console","push","emit","resize","results","../util/hub",3,"debounce","getwindowdimensions","windowdimensions","Array","select","on","../util/debounce","../util/windowdimensions",4,"./mount",5,"append","attr","style","height",6,"calculate_layout","_this","canvas","margin","top","right","bottom","left","width","layout","svg","text",7,"colorbrewer","YlGn",8,9,"YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr",10,11,"BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired",12,"Pastel1","Pastel2","Set1","Set2","Set3","./colorbrewer.js","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","lo","hi","arguments","mid","d3_zipLength","d3_range_integerScale","d3_class","ctor","properties","Object","defineProperty","prototype","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","apply","d3_vendorSymbol","object","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","listenerByName","listener","get","concat","remove","set","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","padding","border","ctm","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","toLowerCase","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t0","t1","Infinity","d3_timer_queueTail","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","d3_date","range","dt","times","range_utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","ease","timer","elapsed","tweened","tick","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","years","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","seconds","minutes","timezone","hours","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","factory","utils_hooks__hooks","hookCallback","setHookCallback","defaultParsingFlags","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","isDate","arr","res","hasOwnProp","extend","create_utc__createUTC","strict","createLocalOrUTC","valid__isValid","_isValid","_d","_pf","_strict","undefined","bigHour","valid__createInvalid","flags","copyConfig","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","obj","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","Locale","normalizeLocale","chooseLocale","loadLocale","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","locale_locales__getLocale","defineLocale","abbr","addUnitAlias","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","getSet","zeroFill","targetLength","forceSign","addFormatToken","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","formattingTokens","formatMoment","isValid","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","matched","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","localeMonths","_months","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecateSimple","deprecations","configFromISO","from_string__isoRegex","isoDates","isoTimes","matchOffset","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","ms","createUTCDate","daysInYear","isLeapYear","getIsLeapYear","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","daysToDayOfWeek","local__createLocal","localeWeek","_week","dow","doy","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","dayOfYearFromWeeks","weekday","daysToAdd","getSetDayOfYear","clone","defaults","currentDateArray","_useUTC","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","GG","E","gg","parsedInput","stringLength","totalParsedInputLength","meridiemFixWrap","_meridiem","meridiem","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","configFromObject","millisecond","createFromConfig","preparse","configFromInput","isUTC","pickBy","moments","Duration","quarters","quarter","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","separator","utcOffset","offsetFromString","chunk","parts","chunkOffset","cloneWithOffset","model","diff","getDateOffset","getSetOffset","keepLocalTime","localAdjust","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","create__isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","isAfter","isBefore","createAdder","period","dur","tmp","isAdding","moment_calendar__calendar","sod","calendar","inputMs","endOf","isSame","absFloor","asFloat","delta","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toDate","inputString","defaultFormat","postformat","withoutSuffix","humanize","fromNow","newLocaleData","isoWeekday","to_type__valueOf","unix","moment_valid__isValid","parsingFlags","invalidAt","addWeekYearFormatToken","getter","weeksInYear","getSetWeekYear","getSetISOWeekYear","getISOWeeksInYear","getWeeksInYear","weekInfo","getSetQuarter","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","weekdays","weekdaysShort","weekdaysMin","getSetDayOfWeek","getSetLocaleDayOfWeek","getSetISODayOfWeek","lowercase","matchMeridiem","_meridiemParse","localeIsPM","localeMeridiem","isLower","millisecond__milliseconds","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","locale_set__set","_ordinalParseLenient","_ordinalParse","lists__get","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","bubble","daysToYears","yearsToDays","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","duration_humanize__getSetRelativeTimeThreshold","limit","withSuffix","iso_string__toISOString","iso_string__abs","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","getSetDayOfMonth","invalidWeekday","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","toJSON","isoWeek","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","dates","zone","momentPrototype","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","prototype__proto","firstDayOfYear","ordinalParse","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_get__milliseconds","duration_prototype__proto","toIsoString","invalid","relativeTimeThreshold","_moment","info","clipId","focus","inner","item","maxDomains","poifsm","updatepoi","hide","show","dist","startx","currentx","provideMax","xVal",13,"neighbours","modulo","calculate_direction","create_directions","drawArrow","filteredData","sections","dir","section","arrow","minLabelWidth","p1widths","p2widths","p3widths","degree","textDirection","Neighbours","halfway","poiNeighbours","../util/neighbours",14,"getNeighbours","label","labelShad","dxAttr","yValWidth","getComputedTextLength","labelWidth",15,"dotContainer","drawDots",16,"colorScale","create_cells","dataDom","textcolorScale","cellsEnter",17,"getTimezone",18,"timeout",19,20,"fd","last",21,"getElementsByTagName","innerWidth","clientWidth","innerHeight","clientHeight",22,"_speedArray","calculate_speed_category","cat","getMaxObj","getSpeeds","groupedData","maxItem","wsp","wd","NNE","NE","ENE","ESE","SE","SSE","SSW","SW","WSW","WNW","NW","NNW","0-4","5-9","10-14","15-19","20-24","25-29","30-34","35-39","40-44","45-49","50-54","55-59","60-64","65+","speed","bits","speedArray","speeds","legend","bars",23,"dirkeys","rowData","rowsGrp","sideheader","sideheaderGrp","topheader","topheaderGrp",24,"circlecontainer","diameter"],"mappings":"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PC,KAAK,QAAS,SACdD,OAAO,QACPC,KAAK,QAAS,YACde,KAAKxG,EAAKwG,MACVf,KAAK,KAAM,IACXA,KAAK,KAAM,GAEdqiF,EAAQvhF,EACLf,OAAO,KACPC,KAAK,QAAS,SACdA,KAAK,YAAa,aAAaa,EAAOP,OAAOK,KAAK,IAAGE,EAAOP,OAAOE,IAAI,KAE1E6hF,EACGtiF,OAAO,QACPC,KAAK,QAAS,WACdA,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAMa,EAAOxG,WAAW6F,QAGhCupD,GACEvpD,OAAQ,GACRU,MAAO,IAETuO,EAAakzE,EACVtiF,OAAO,KACPC,KAAK,QAAS,aACdA,KAAK,YAAa,qBAErBspF,EAAen6E,EACZpP,OAAO,KACPC,KAAK,QAAS,gBAEjBopF,EAAgBj6E,EACbpP,OAAO,KACPC,KAAK,QAAS,iBAEjBkpF,EAAU/5E,EACPpP,OAAO,KACPC,KAAK,QAAS,WACdA,KAAK,YAAa,aAAyB,IAAZypD,EAAM7oD,MAAW,KAAiB,IAAb6oD,EAAMvpD,OAAY,KAEzE/H,GACEsrF,KACErrD,GACE,GACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEF4uD,IACE,IACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEFjW,GACE,GACA,KACA,KACA,KACA,KACA,GACA,IACA,IACA,IACA,EACA,EACA,EACA,GAEFoW,IACE,IACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEFlrE,GACE,IACA,KACA,KACA,IACA,GACA,IACA,IACA,IACA,IACA,EACA,EACA,EACA,GAEFqrE,IACE,IACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,EACA,GAEF/qE,GACE,IACA,KACA,EACA,KACA,KACA,KACA,IACA,IACA,GACA,IACA,EACA,EACA,GAEFkrE,IACE,IACA,KACA,KACA,KACA,KACA,IACA,GACA,IACA,IACA,I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","file":"dve-0.0.2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports =\n  # handles browser resize\n  mount: require './display/mount'\n  # formatting\n  title: require './display/title'\n  space: require './display/space'\n  # data set\n  data: require './display/data'\n  report: require './display/report'\n\n  # navigation\n  timeheadings: require './time/timeheadings'\n  dayheadings: require './time/dayheadings'\n  # time x single scale\n  chart: require './time/chart'\n  tablebytime: require './time/tablebytime'\n  # chart series\n  line: require './time/line'\n  scatter: require './time/scatter'\n  # single series\n  direction: require './time/direction'\n  #TODO traffic light\n\n  # non-timeline components\n  histogram: require './xy/histogram'\n  table: require './xy/table'\n  windrose: require './xy/windrose'",null,"d3 = require 'd3'\nmoment = require 'moment'\ncreatehub = require '../util/hub'\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions } = options\n\n  items = []\n\n  d3.csv spec.source.url, (error, data)->\n    if spec.source.translate?\n      for d in data\n        for target, source of spec.source.translate\n          continue if !d[source]?\n          value = d[source]\n          delete d[source]\n          d[target] = value\n    if spec.source.include?\n      data = data.filter (d)->\n        shouldinclude = yes\n        for key, value of spec.source.include\n          continue if !d[key]?\n          shouldinclude = shouldinclude and d[key] is value\n        shouldinclude\n    if spec.source.exclude?\n      data = data.filter (d)->\n        shouldexclude = no\n        for key, value of spec.source.exclude\n          continue if !d[key]?\n          shouldexclude = shouldexclude and d[key] is value\n        not shouldexclude\n\n    parse_time = (time) -> moment.utc d.time, moment.ISO_8601\n    if spec.source.timeformat?\n      parse_time = (time)-> moment.utc d.time, spec.source.timeformat\n    for d in data\n      d.time = parse_time d.time\n\n    domain = d3.extent data, (d) -> d.time\n\n    timeRegex = /(\\-|\\+)[0-9]+([dwMyhms])/\n\n    start = spec.display.start\n    end = spec.display.end\n\n    parse_start = (time) -> moment.utc time, moment.ISO_8601\n    parse_end = (time) -> moment.utc time, moment.ISO_8601\n\n    parse_duration = (str)->\n      sign = str.substr(0, 1) #+\n      offset = +str.substr(1, str.length - 2) #5\n      offsetunit = str.substr(str.length - 1) #h\n\n      offset = -offset if sign is '-'\n\n      duration = moment.duration offset, offsetunit\n\n    durationformats =\n      timestamp: (str) ->\n        duration =  parse_duration str\n        moment.utc().add duration\n      second: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('second').add duration\n      minute: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('minute').add duration\n      hour: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('hour').add duration\n      day: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('day').add duration\n      week: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('week').add duration\n      month: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('month').add duration\n      year: (str) ->\n        duration =  parse_duration str\n        moment.utc().startOf('year').add duration\n      localsecond: (str) ->\n        duration =  parse_duration str\n        moment().startOf('second').add(duration).utc()\n      localminute: (str) ->\n        duration =  parse_duration str\n        moment().startOf('minute').add(duration).utc()\n      localhour: (str) ->\n        duration =  parse_duration str\n        moment().startOf('hour').add(duration).utc()\n      localday: (str) ->\n        duration =  parse_duration str\n        moment().startOf('day').add(duration).utc()\n      localweek: (str) ->\n        duration =  parse_duration str\n        moment().startOf('week').add(duration).utc()\n      localmonth: (str) ->\n        duration =  parse_duration str\n        moment().startOf('month').add(duration).utc()\n      localyear: (str) ->\n        duration =  parse_duration str\n        moment().startOf('year').add(duration).utc()\n\n    if start?\n      if typeof start is 'string'\n        for name, parse of durationformats\n          continue if start.indexOf(name) isnt 0\n          do (name, parse) ->\n            parse_start = (time) -> parse start[name.length..]\n          break\n        domain[0] = parse_start start\n      else\n        domain[0] = start\n\n    if end?\n      if typeof start is 'string'\n        for name, parse of durationformats\n          continue if end.indexOf(name) isnt 0\n          do (name, parse) ->\n            parse_end = (time) -> parse end[name.length..]\n          break\n        domain[1] = parse_end end\n      else\n        domain[1] = end\n\n    poi = null\n    if moment.utc().isBetween domain[0], domain[1]\n      poi = moment.utc()\n\n    hub = createhub()\n\n    for s in spec.spec\n      unless components[s.type]?\n        return console.error \"#{s.type} component not found\"\n      items.push components[s.type] dom,\n        components: components\n        spec: s\n        dimensions: dimensions\n        hub: hub\n        data: data\n        domain: domain\n\n    hub.emit 'poi', poi\n\n  resize: (dimensions) ->\n    for i in items\n      continue unless i.resize?\n      i.resize dimensions\n","###\n\nMount a component or group of components into the dom.\nKeep them resized based on window resize events\n\n###\n\nd3 = require 'd3'\nwindowdimensions = require '../util/windowdimensions'\ndebounce = require '../util/debounce'\n\ngetwindowdimensions = ->\n  dimensions = windowdimensions()\n  dimensions[0] -= 42\n  dimensions\n\nmodule.exports = (dom, options) ->\n  { components, spec } = options\n\n  dimensions = getwindowdimensions()\n\n  unless spec instanceof Array\n    spec = [spec]\n\n  items = []\n  for s in spec\n    unless components[s.type]?\n      return console.error \"#{s.type} component not found\"\n    items.push components[s.type] dom,\n      components: components\n      spec: s\n      dimensions: dimensions\n\n  d3\n    .select window\n    .on 'resize', debounce 125, ->\n      dimensions = getwindowdimensions()\n      for i in items\n        continue unless i.resize?\n        i.resize dimensions\n","###\n\nRepresents an entire report.\nIncludes title, author and other metadata.\n\n###\n\nmount = require './mount'\n\nmodule.exports = (dom, options) ->\n  { components, spec } = options\n  mount dom,\n    components: components\n    spec: spec.spec\n","d3 = require 'd3'\n\nmodule.exports = (dom, options) ->\n  { dimensions, spec } = options\n  dom = d3.select dom\n    .append 'div'\n    .attr 'class', 'item space'\n\n  resize = (dimensions) ->\n    dom\n      .style 'width', \"#{dimensions[0]}px\"\n      .style 'height', \"#{spec.height or 15}px\"\n\n  resize dimensions\n\n  resize: resize\n","d3 = require 'd3'\n\ncalculate_layout = (dimensions) =>\n  margin =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 0\n\n  dimensions =\n    width: dimensions[0]\n    height: 25\n\n  canvas =\n    top: margin.top\n    right: margin.right\n    bottom: margin.bottom\n    left: margin.left\n    width: dimensions.width - margin.left - margin.right\n    height: dimensions.height - margin.top - margin.bottom\n\n  margin: margin\n  dimensions: dimensions\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { spec, dimensions } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item title'\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .attr 'dy', 20\n    .attr 'dx', 5\n    .text spec.text\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n  resize dimensions\n\n  resize: resize","// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n","module.exports = require('./colorbrewer.js');\n","!function() {\n  var d3 = {\n    version: \"3.5.5\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      });\n      center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format.toLowerCase())) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","//! moment.js\n//! version : 2.10.2\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function Locale() {\n    }\n\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && typeof module !== 'undefined' &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (typeof values === 'undefined') {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function get_set__set (mom, unit, value) {\n        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = typeof regex === 'function' ? regex : function (isStrict) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  matchWord);\n    addRegexToken('MMMM', matchWord);\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            config._pf.invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m) {\n        return this._months[m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m) {\n        return this._monthsShort[m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && m._pf.overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n\n        return m;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                warn(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    var from_string__isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n        ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n        ['HH', /(T| )\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = from_string__isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(matchOffset)) {\n                config._f += 'Z';\n            }\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYY', 'YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = createUTCDate(year, 0, 1).getUTCDay();\n        var daysToAdd;\n        var dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year      : dayOfYear > 0 ? year      : year - 1,\n            dayOfYear : dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n        }\n        return [now.getFullYear(), now.getMonth(), now.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        res = new Moment(checkOverflow(config));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             return other < this ? this : other;\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            return other > this ? this : other;\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchOffset);\n    addRegexToken('ZZ', matchOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(string) {\n        var matches = ((string || '').match(matchOffset) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n        return model._isUTC ? local__createLocal(input).zone(model._offset || 0) : local__createLocal(input).local();\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(input);\n            }\n            if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!input) {\n            input = 0;\n        }\n        else {\n            input = local__createLocal(input).utcOffset();\n        }\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (this._a) {\n            var other = this._isUTC ? create_utc__createUTC(this._a) : local__createLocal(this._a);\n            return this.isValid() && compareArrays(this._a, other.toArray()) > 0;\n        }\n\n        return false;\n    }\n\n    function isLocal () {\n        return !this._isUTC;\n    }\n\n    function isUtcOffset () {\n        return this._isUTC;\n    }\n\n    function isUtc () {\n        return this._isUTC && this._offset === 0;\n    }\n\n    var aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = create__isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                d : parseIso(match[4], sign),\n                h : parseIso(match[5], sign),\n                m : parseIso(match[6], sign),\n                s : parseIso(match[7], sign),\n                w : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n        return this.format(this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this > +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return inputMs < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this < +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return +this.clone().endOf(units) < inputMs;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var inputMs;\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this === +input;\n        } else {\n            inputMs = +local__createLocal(input);\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function diff (input, units, asFloat) {\n        var that = cloneWithOffset(input, this),\n            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n            delta, output;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if ('function' === typeof Date.prototype.toISOString) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, this._pf);\n    }\n\n    function invalidAt () {\n        return this._pf.overflow;\n    }\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getSetISOWeekYear (input) {\n        var year = weekOfYear(this, 1, 4).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    addFormatToken('Q', 0, 0, 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {\n        var weekday = config._locale.weekdaysParse(input);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            config._pf.invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m) {\n        return this._weekdays[m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName) {\n        var i, mom, regex;\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            if (!this._weekdaysParse[i]) {\n                mom = local__createLocal([2000, 1]).day(i);\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, function () {\n        return this.hours() % 12 || 12;\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        config._pf.bigHour = true;\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    function millisecond__milliseconds (token) {\n        addFormatToken(0, [token, 3], 0, 'millisecond');\n    }\n\n    millisecond__milliseconds('SSS');\n    millisecond__milliseconds('SSSS');\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n    addRegexToken('SSSS', matchUnsigned);\n    addParseToken(['S', 'SS', 'SSS', 'SSSS'], function (input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    });\n\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add          = add_subtract__add;\n    momentPrototype__proto.calendar     = moment_calendar__calendar;\n    momentPrototype__proto.clone        = clone;\n    momentPrototype__proto.diff         = diff;\n    momentPrototype__proto.endOf        = endOf;\n    momentPrototype__proto.format       = format;\n    momentPrototype__proto.from         = from;\n    momentPrototype__proto.fromNow      = fromNow;\n    momentPrototype__proto.get          = getSet;\n    momentPrototype__proto.invalidAt    = invalidAt;\n    momentPrototype__proto.isAfter      = isAfter;\n    momentPrototype__proto.isBefore     = isBefore;\n    momentPrototype__proto.isBetween    = isBetween;\n    momentPrototype__proto.isSame       = isSame;\n    momentPrototype__proto.isValid      = moment_valid__isValid;\n    momentPrototype__proto.lang         = lang;\n    momentPrototype__proto.locale       = locale;\n    momentPrototype__proto.localeData   = localeData;\n    momentPrototype__proto.max          = prototypeMax;\n    momentPrototype__proto.min          = prototypeMin;\n    momentPrototype__proto.parsingFlags = parsingFlags;\n    momentPrototype__proto.set          = getSet;\n    momentPrototype__proto.startOf      = startOf;\n    momentPrototype__proto.subtract     = add_subtract__subtract;\n    momentPrototype__proto.toArray      = toArray;\n    momentPrototype__proto.toDate       = toDate;\n    momentPrototype__proto.toISOString  = moment_format__toISOString;\n    momentPrototype__proto.toJSON       = moment_format__toISOString;\n    momentPrototype__proto.toString     = toString;\n    momentPrototype__proto.unix         = unix;\n    momentPrototype__proto.valueOf      = to_type__valueOf;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return typeof output === 'function' ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY LT',\n        LLLL : 'dddd, MMMM D, YYYY LT'\n    };\n\n    function longDateFormat (key) {\n        var output = this._longDateFormat[key];\n        if (!output && this._longDateFormat[key.toUpperCase()]) {\n            output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                return val.slice(1);\n            });\n            this._longDateFormat[key] = output;\n        }\n        return output;\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (typeof output === 'function') ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (typeof prop === 'function') {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months       =        localeMonths;\n    prototype__proto._months      = defaultLocaleMonths;\n    prototype__proto.monthsShort  =        localeMonthsShort;\n    prototype__proto._monthsShort = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse  =        localeMonthsParse;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years = 0;\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // Accurately convert days to years, assume start from year 0.\n        years = absFloor(daysToYears(days));\n        days -= absFloor(yearsToDays(years));\n\n        // 30 days to a month\n        // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n        months += absFloor(days / 30);\n        days   %= 30;\n\n        // 12 months -> 1 year\n        years  += absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absFloor(years / 4) -\n        //     absFloor(years / 100) + absFloor(years / 400);\n        return years * 146097 / 400;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToYears(days) * 12;\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(yearsToDays(this._months / 12));\n            switch (units) {\n                case 'week'   : return days / 7            + milliseconds / 6048e5;\n                case 'day'    : return days                + milliseconds / 864e5;\n                case 'hour'   : return days * 24           + milliseconds / 36e5;\n                case 'minute' : return days * 24 * 60      + milliseconds / 6e4;\n                case 'second' : return days * 24 * 60 * 60 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var duration_get__milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes === 1          && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   === 1          && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    === 1          && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  === 1          && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   === 1          && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = iso_string__abs(this.years());\n        var M = iso_string__abs(this.months());\n        var D = iso_string__abs(this.days());\n        var h = iso_string__abs(this.hours());\n        var m = iso_string__abs(this.minutes());\n        var s = iso_string__abs(this.seconds() + this.milliseconds() / 1000);\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = duration_get__milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.10.2';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));","d3 = require 'd3'\nmoment = require 'moment'\n\ncalculate_layout = (dimensions) ->\n  dimensions =\n    width: dimensions[0]\n    height: 120\n\n  info =\n    top: 0\n    right: 0\n    bottom: 3\n    left: 200\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  dimensions: dimensions\n  info: info\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item chart'\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text spec.text\n    .attr 'dy', 20\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'g'\n    .attr 'class', 'x axis'\n    .attr 'transform', \"translate(0,#{layout.canvas.height})\"\n\n  inner\n    .append 'g'\n    .attr 'class', 'y axis'\n\n  clipId = \"clip-#{Math.floor(Math.random() * 1000000)}\"\n\n  chart = inner\n    .append 'g'\n    .attr 'class', 'chart'\n    .attr 'clip-path', \"url(##{clipId})\"\n\n  chart\n    .append 'defs'\n    .append 'clipPath'\n    .attr 'id', clipId\n    .append 'rect'\n    .attr 'x', '0'\n    .attr 'y', '0'\n\n  scale =\n    x: d3.time.scale().domain domain\n    y: d3.scale.linear()\n\n  axis =\n    x: d3.svg.axis().scale(scale.x).orient(\"bottom\").ticks(d3.time.hour)\n    y: d3.svg.axis().scale(scale.y).orient(\"left\").ticks(6)\n\n  poi = null\n  hub.on 'poi', (p) ->\n    poi = p\n    updatepoi()\n\n  poifsm =\n    hide: ->\n      return if poi is null\n      hub.emit 'poi', null\n\n    show: (x) ->\n      range = scale.x.range()\n      return poifsm.hide() if range[0] > x or range[1] < x\n      d = scale.x.invert x\n\n      return if poi is d\n      hub.emit 'poi', moment d\n\n    update: ->\n      x = d3.mouse(inner.node())[0]\n      # Only update if enough drag\n      if poifsm.startx?\n        dist = Math.abs poifsm.startx - x\n        return if dist < 10\n      poifsm.startx = null\n      poifsm.show x\n    mousedown: ->\n      x = d3.mouse(inner.node())[0]\n      return poifsm.show x if !poifsm.currentx?\n      poifsm.startx = x\n    mouseup: ->\n      return if !poifsm.startx?\n      if !poifsm.currentx\n        poifsm.startx = null\n        return poifsm.hide()\n      dist = Math.abs poifsm.startx - poifsm.currentx\n      if dist < 10\n        poifsm.startx = null\n        return poifsm.hide()\n      x = d3.mouse(inner.node())[0]\n      poifsm.show x\n\n  drag = d3.behavior.drag()\n    .on 'drag', poifsm.update\n\n  items = []\n  maxDomains = []\n\n  for s in spec.spec\n    unless components[s.type]?\n      return console.error \"#{s.type} component not found\"\n    item = components[s.type] chart,\n      components: components\n      spec: s\n      dimensions: dimensions\n      hub: hub\n      data: data\n      domain: domain\n      axis: axis\n      scale: scale\n    maxDomains.push item.provideMax()\n    items.push item\n\n  focus = inner\n    .append 'g'\n    .attr 'class', 'focus'\n\n  focus\n    .append 'line'\n    .attr 'class', 'poi'\n    .attr 'display', 'none'\n    .attr 'y1', 0\n    .attr 'y2', layout.canvas.height\n\n  focus\n    .append 'rect'\n    .attr 'class', 'foreground'\n    .style 'fill', 'none'\n    .on 'mousedown', poifsm.mousedown\n    .on 'mouseup', poifsm.mouseup\n    .call drag\n\n  updatepoi = ->\n    if !poi?\n      poifsm.currentx = scale.x poi\n      focus\n        .select 'line.poi'\n        .attr 'display', 'none'\n      return\n\n    poifsm.currentx = scale.x poi\n\n    focus\n      .select 'line.poi'\n      .attr 'display', null\n      .attr 'x1', scale.x poi\n      .attr 'x2', scale.x poi\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n    chart\n      .select 'rect'\n      .attr 'width', layout.canvas.width\n      .attr 'height', layout.canvas.height\n\n    scale.y.domain [0, 1.1 * d3.max maxDomains]\n\n    scale.x.range [0, layout.canvas.width]\n    scale.y.range [layout.canvas.height, 0]\n\n    inner\n      .select '.x.axis'\n      .call(\n        axis.x\n          .tickSize -layout.canvas.height, 0, 0\n          .tickFormat ''\n      )\n\n    inner\n      .selectAll '.x.axis .tick line'\n      .data scale.x.ticks axis.x.ticks()[0]\n      .attr 'class', (d) ->\n        d = moment(d).format('HH')\n        if d is '00'\n          'major'\n        else if d is '12'\n          'minor'\n        else\n          'sub-minor'\n\n    inner\n      .select '.y.axis'\n      .call axis.y.tickSize -layout.canvas.width, 0, 0\n\n    inner\n      .select '.y.axis .tick text'\n      .text ' '\n\n    inner\n      .selectAll '.y.axis .tick line'\n      .data scale.y.ticks axis.y.ticks()[0]\n      .attr 'class', (d) ->\n        if d is 0 then 'zero' else null\n\n    focus\n      .select '.foreground'\n      .attr 'height', layout.canvas.height\n      .attr 'width', layout.canvas.width\n\n    for i in items\n      continue unless i.resize?\n      i.resize [\n        layout.canvas.width\n        layout.canvas.height\n      ]\n\n    updatepoi()\n\n  resize dimensions\n  resize: resize","d3 = require 'd3'\nmoment = require 'moment'\n\ncalculate_layout = (dimensions) ->\n  margin =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 0\n\n  dimensions =\n    width: dimensions[0]\n    height: 25\n\n  info =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 200\n\n  title =\n    top: 0\n    right: dimensions.width - info.left\n    bottom: 0\n    left: 0\n    height: dimensions.height\n    width: info.left\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  margin: margin\n  dimensions: dimensions\n  info: info\n  title: title\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item dayheadings'\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.title.left},#{layout.title.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text spec.text\n    .attr 'dy', 20\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'line'\n    .attr 'class', 'divider'\n    .attr 'x1', 0\n    .attr 'x2', 0\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  inner\n    .append 'g'\n    .attr 'class', 'axis'\n    .attr \"transform\", \"translate(0,#{-layout.canvas.top})\"\n\n  scale = d3.time.scale().domain domain\n\n  axis = d3\n    .svg\n    .axis()\n    .scale scale\n    .ticks d3.time.day\n    .tickFormat (d) -> d3.time.format('%a %d %b') d\n\n  focus = inner\n    .append 'g'\n    .attr 'class', 'focus'\n\n  focus\n    .append 'line'\n    .attr 'class', 'poi'\n    .attr 'display', 'none'\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val-shad'\n    .attr 'display', 'none'\n    .attr 'dx', '-3em'\n    .attr 'dy', 2\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val'\n    .attr 'display', 'none'\n    .attr 'dx', '-3em'\n\n  poi = null\n  hub.on 'poi', (p) ->\n    poi = p\n    updatepoi()\n\n  poifsm =\n    hide: ->\n      return if poi is null\n      hub.emit 'poi', null\n\n    show: (x) ->\n      range = scale.range()\n      return poifsm.hide() if range[0] > x or range[1] < x\n      d = scale.invert x\n\n      return if poi is d\n      hub.emit 'poi', moment d\n\n    update: ->\n      x = d3.mouse(inner.node())[0]\n      # Only update if enough drag\n      if poifsm.startx?\n        dist = Math.abs poifsm.startx - x\n        return if dist < 10\n      poifsm.startx = null\n      poifsm.show x\n    mousedown: ->\n      x = d3.mouse(inner.node())[0]\n      return poifsm.show x if !poifsm.currentx?\n      poifsm.startx = x\n    mouseup: ->\n      return if !poifsm.startx?\n      if !poifsm.currentx\n        poifsm.startx = null\n        return poifsm.hide()\n      dist = Math.abs poifsm.startx - poifsm.currentx\n      if dist < 10\n        poifsm.startx = null\n        return poifsm.hide()\n      x = d3.mouse(inner.node())[0]\n      poifsm.show x\n\n  drag = d3.behavior.drag()\n    .on 'drag', poifsm.update\n\n  focus\n    .append 'rect'\n    .attr 'class', 'foreground'\n    .style 'fill', 'none'\n    .on 'mousedown', poifsm.mousedown\n    .on 'mouseup', poifsm.mouseup\n    .call drag\n\n  updatepoi = ->\n    if !poi?\n      focus\n        .select 'line.poi'\n        .attr 'display', 'none'\n\n      focus\n        .select '.poi-y-val-shad'\n        .attr 'display', 'none'\n\n      focus\n        .select '.poi-y-val'\n        .attr 'display', 'none'\n      return\n\n    poifsm.currentx = scale poi\n\n    focus\n      .select 'line.poi'\n      .attr 'display', null\n      .attr 'x1', scale poi\n      .attr 'x2', scale poi\n\n    if (layout.canvas.width - scale poi) < 48\n      xVal = layout.canvas.width - 48\n    else if (layout.canvas.left + scale poi) < 248\n      xVal =  53\n    else\n      xVal = scale poi\n\n    focus\n      .select '.poi-y-val-shad'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{xVal+3},#{layout.canvas.height - 8})\"\n      .text poi.format('ddd DD MMM')\n\n    focus\n      .select '.poi-y-val'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{xVal+3},#{layout.canvas.height - 7})\"\n      .text poi.format('ddd DD MMM')\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n    scale.range [0, layout.canvas.width]\n\n    inner\n      .selectAll '.axis .tick line'\n      .data scale.ticks axis.ticks()[0]\n      .attr 'class', (d) ->\n        if d is 0 then 'zero' else null\n\n    inner\n      .select '.axis'\n      .call (axis.tickSize layout.canvas.height)\n\n    focus\n      .select '.foreground'\n      .attr 'height', layout.canvas.height\n      .attr 'width', layout.canvas.width\n\n    inner\n      .selectAll '.axis text'\n      .data scale.ticks axis.ticks()[0]\n      .attr 'x', (d) ->\n        first = scale d\n        d = moment(d).add 12, 'hours'\n        scale(d) - first\n      .attr 'dy', -layout.canvas.height/2.5\n      .style 'font-size', 14\n\n    inner.select '.axis .domain'\n      .remove()\n\n    updatepoi()\n\n  resize dimensions\n\n  resize: resize\n","d3 = require 'd3'\nmoment = require 'moment'\nneighbours = require '../util/neighbours'\n\ncalculate_layout = (dimensions) ->\n  dimensions =\n    width: dimensions[0]\n    height: 60\n\n  info =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 200\n\n  title =\n    top: 0\n    right: dimensions.width - info.left\n    bottom: 0\n    left: 0\n    height: dimensions.height\n    width: info.left\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  dimensions: dimensions\n  info: info\n  title: title\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n  sections = null\n\n  drawArrow = (dir, section) ->\n    section\n      .selectAll '*'\n      .remove()\n\n    arrow = section\n      .append 'g'\n      .attr 'transform', 'rotate(' + (dir + 180) + ', 0, 10)'\n\n    arrow\n      .append 'path'\n      .attr 'class', 'arrowhead'\n      .attr 'd', d3.svg.symbol().type('triangle-up').size 20\n\n    arrow\n      .append 'line'\n      .attr 'class', 'arrowline'\n      .attr 'x1', 0\n      .attr 'x2', 0\n      .attr 'y1', 3\n      .attr 'y2', 20\n\n    section\n      .append 'text'\n      .attr 'class', 'label'\n      .text \"#{dir.toFixed(0)}#{spec.units}\"\n      .attr 'text-anchor', 'middle'\n      .attr 'transform', \"translate(0,35)\"\n\n  create_directions = ->\n    bisector = d3.bisector((d) -> d.time).left\n    data = scale\n      .ticks d3.time.hour, 3\n      .map (d) ->\n        index = bisector filteredData, d\n        filteredData[index]\n      .filter (d) -> d?\n\n    sections = svg\n      .select '.inner'\n      .selectAll '.section'\n      .data data\n\n    section = sections\n      .enter()\n      .append 'g'\n      .attr 'class', (d) ->\n        hour = d.time.local().get('hour')\n        if hour % 12 is 0\n          'section priority1'\n        else if hour % 6 is 0\n          'section priority2'\n        else if hour % 3 is 0\n          'section priority3'\n\n    arrow = section\n      .append 'g'\n      .attr 'transform', (d) -> \"rotate(#{d[spec.field] + 180}, 0, 9)\"\n    arrow\n      .append 'path'\n      .attr 'class', 'arrowhead'\n      .attr 'd', d3.svg.symbol().type('triangle-up').size 20\n\n    arrow\n      .append 'line'\n      .attr 'class', 'arrowline'\n      .attr 'x1', 0\n      .attr 'x2', 0\n      .attr 'y1', 3\n      .attr 'y2', 20\n\n    section\n      .append 'text'\n      .attr 'class', 'label'\n      .text (d) -> calculate_direction d[spec.field]\n      .attr 'text-anchor', 'middle'\n      .attr 'transform', \"translate(0,40)\"\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n    scale.range [0, layout.canvas.width]\n\n    sections\n      .attr 'transform', (d) -> \"translate(#{scale(d.time)}, 10)\"\n\n    p1 = inner.selectAll '.priority1'\n    p2 = inner.selectAll '.priority2'\n    p3 = inner.selectAll '.priority3'\n\n    minLabelWidth = 31\n    p1widths = p1[0].length * minLabelWidth\n    p2widths = p2[0].length * minLabelWidth\n    p3widths = p3[0].length * minLabelWidth\n\n    switch\n      when p1widths + p2widths + p3widths <= layout.canvas.width\n        p2.attr 'display', 'inline'\n        p3.attr 'display', 'inline'\n      when p1widths + p2widths <= layout.canvas.width\n        p2.attr 'display', 'inline'\n        p3.attr 'display', 'none'\n      when p1widths <= layout.canvas.width\n        p3.attr 'display', 'none'\n        p2.attr 'display', 'none'\n\n    updatepoi()\n\n  calculate_direction = (degree) ->\n    direction = Math.floor (degree/22.5) + 0.5\n    text = [\n      'N',\n      'NNE',\n      'NE',\n      'ENE',\n      'E',\n      'ESE',\n      'SE',\n      'SSE',\n      'S',\n      'SSW',\n      'SW',\n      'WSW',\n      'W',\n      'WNW',\n      'NW',\n      'NNW'\n    ]\n\n    textDirection = text[(direction %% 16)]\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item direction'\n\n  data = data.map (d) ->\n    result = time: d.time\n    result[spec.field] = +d[spec.field]\n    result\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.title.left},#{layout.title.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text spec.text\n    .attr 'dy', 18\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'line'\n    .attr 'class', 'divider'\n    .attr 'x1', 0\n    .attr 'x2', 0\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  filteredData = data.filter (d) ->\n    +d.time >= +domain[0] and +d.time <= +domain[1]\n\n  scale = d3.time.scale().domain domain\n    .range [0, layout.canvas.width]\n\n  create_directions()\n\n  focus = inner\n    .append 'g'\n    .attr 'class', 'focus'\n\n  focus\n    .append 'line'\n    .attr 'class', 'poi'\n    .attr 'display', 'none'\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  focus\n    .append 'circle'\n    .attr 'class', 'arrow-background'\n    .attr 'r', 25\n    .attr 'display', 'none'\n\n  focus\n    .append 'g'\n    .attr 'class', 'foc-section'\n    .attr 'display', 'none'\n\n  poi = null\n  hub.on 'poi', (p) ->\n    poi = p\n    updatepoi()\n\n  poifsm =\n    hide: ->\n      return if poi is null\n      hub.emit 'poi', null\n\n    show: (x) ->\n      range = scale.range()\n      return poifsm.hide() if range[0] > x or range[1] < x\n      d = scale.invert x\n\n      return if poi is d\n      hub.emit 'poi', moment.utc d\n\n    update: ->\n      x = d3.mouse(inner.node())[0]\n      # Only update if enough drag\n      if poifsm.startx?\n        dist = Math.abs poifsm.startx - x\n        return if dist < 10\n      poifsm.startx = null\n      poifsm.show x\n    mousedown: ->\n      x = d3.mouse(inner.node())[0]\n      return poifsm.show x if !poifsm.currentx?\n      poifsm.startx = x\n    mouseup: ->\n      return if !poifsm.startx?\n      if !poifsm.currentx\n        poifsm.startx = null\n        return poifsm.hide()\n      dist = Math.abs poifsm.startx - poifsm.currentx\n      if dist < 10\n        poifsm.startx = null\n        return poifsm.hide()\n      x = d3.mouse(inner.node())[0]\n      poifsm.show x\n\n  drag = d3.behavior.drag()\n    .on 'drag', poifsm.update\n\n  focus\n    .append 'rect'\n    .attr 'class', 'foreground'\n    .attr 'height', layout.canvas.height\n    .attr 'width', layout.canvas.width\n    .style 'fill', 'none'\n    .on 'mousedown', poifsm.mousedown\n    .on 'mouseup', poifsm.mouseup\n    .call drag\n\n  updatepoi = ->\n    if !poi?\n      focus\n        .select 'line.poi'\n        .attr 'display', 'none'\n      focus\n        .select '.foc-section'\n        .attr 'display', 'none'\n      focus\n        .select '.arrow-background'\n        .attr 'display', 'none'\n      return\n\n    poifsm.currentx = scale poi\n\n    focus\n      .select 'line.poi'\n      .attr 'display', null\n      .attr 'x1', scale poi\n      .attr 'x2', scale poi\n\n    Neighbours = neighbours filteredData, (d) -> d.time\n    poiNeighbours = Neighbours poi\n\n    d\n\n    if poiNeighbours.length is 1\n      d = poiNeighbours[0]\n    else if +poiNeighbours[0].time < +domain[0]\n      d = poiNeighbours[1]\n    else if +poiNeighbours[1].time > +domain[1]\n      d = poiNeighbours[0]\n    else\n      d0 = poiNeighbours[0]\n      d1 = poiNeighbours[1]\n      halfway = d0.time + (d1.time - d0.time)/2\n      d = if poi.isBefore(halfway) then d0 else d1\n\n    drawArrow d[spec.field], focus.select '.foc-section'\n\n    if (layout.canvas.width - scale poi) < 27\n      xVal = layout.canvas.width - 27\n    else if (layout.canvas.left + scale poi) < 227\n      xVal =  27\n    else\n      xVal = scale d.time\n\n    focus\n      .select '.arrow-background'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{xVal}, #{layout.canvas.height/2})\"\n\n    focus\n      .select '.foc-section'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{xVal}, #{(layout.canvas.height/2)- 17})\"\n\n  resize dimensions\n\n  resize: resize","d3 = require 'd3'\nmoment = require 'moment'\nneighbours = require '../util/neighbours'\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub, scale, axis } = options\n\n  svg = dom.append 'g'\n\n  data = data.map (d) ->\n    result = time: d.time\n    result[spec.field] = +d[spec.field]\n    result[spec.field] = null if result[spec.field] is 0\n    result\n\n  line = svg\n    .append 'path'\n    .attr 'class', \"#{spec.style} #{spec.type}\"\n    .attr 'd', ''\n\n  labelShad = svg\n    .append 'text'\n    .attr 'class', 'label-shad'\n    .attr 'text-anchor', 'start'\n    .attr 'dy', 12\n    .text \"#{spec.text} (#{spec.units})\"\n\n  label = svg\n    .append 'text'\n    .attr 'class', 'label'\n    .attr 'text-anchor', 'start'\n    .attr 'dy', 12\n    .text \"#{spec.text} (#{spec.units})\"\n\n  #---creation: createpoi----#\n  focus = svg\n    .append 'g'\n    .attr 'class', 'focus'\n\n  focus\n    .append 'circle'\n    .attr 'class', 'poi-circle'\n    .attr 'display', 'none'\n    .attr 'r', 4\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val-shad'\n    .attr 'display', 'none'\n    .attr 'dy', '-0.3em'\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val'\n    .attr 'display', 'none'\n    .attr 'dy', '-0.3em'\n\n  data = data.filter (d) -> d[spec.field]?\n\n  getNeighbours = neighbours data, (d) -> d.time\n\n  start = getNeighbours(domain[0])[0]\n  end = getNeighbours(domain[1])\n  end = end[end.length-1]\n\n  filteredData = data.filter (d) ->\n    +d.time >= +start.time and +d.time <= +end.time\n\n  poi = null\n  hub.on 'poi', (p) ->\n    poi = p\n    updatepoi()\n\n  provideMax = ->\n    d3.max filteredData, (d) -> d[spec.field]\n\n  updatepoi = ->\n    if !poi?\n      focus\n        .select '.poi-circle'\n        .attr 'display', 'none'\n      focus\n        .select '.poi-y-val-shad'\n        .attr 'display', 'none'\n      focus\n        .select '.poi-y-val'\n        .attr 'display', 'none'\n      return\n\n    yValWidth = +focus.select('.poi-y-val').node().getComputedTextLength()\n\n    if (dimensions[0] - (scale.x poi)-yValWidth) < yValWidth\n      dxAttr = - yValWidth - 8\n    else\n      dxAttr = 8\n\n    Neighbours = neighbours filteredData, (d) -> d.time\n    poiNeighbours = Neighbours poi\n\n    d\n\n    if poiNeighbours.length is 1\n      d = poiNeighbours[0]\n    else if +poiNeighbours[0].time < +domain[0]\n      d = poiNeighbours[1]\n    else if +poiNeighbours[1].time > +domain[1]\n      d = poiNeighbours[0]\n    else\n      d0 = poiNeighbours[0]\n      d1 = poiNeighbours[1]\n      halfway = d0.time + (d1.time - d0.time)/2\n      d = if poi.isBefore(halfway) then d0 else d1\n\n    focus\n      .select '.poi-circle'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{scale.x(d.time)}, #{scale.y(d[spec.field])})\"\n\n    focus\n      .select '.poi-y-val-shad'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{scale.x(d.time)}, #{scale.y(d[spec.field])})\"\n      .attr 'dx', dxAttr\n      .text \"#{d[spec.field].toPrecision(3)} (#{spec.units})\"\n\n    focus\n      .select '.poi-y-val'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{scale.x(d.time)}, #{scale.y(d[spec.field])})\"\n      .attr 'dx', dxAttr\n      .text \"#{d[spec.field].toPrecision(3)} (#{spec.units})\"\n\n  resize = (dimensions) ->\n    dimensions = dimensions\n\n    path =  d3.svg.line()\n      .x (d) -> scale.x d.time\n      .y (d) -> scale.y d[spec.field]\n\n    line\n      .attr 'd', path filteredData\n\n    labelWidth = +label.node().getComputedTextLength()\n\n    labelShad\n      .attr 'transform', \"translate(#{dimensions[0] - labelWidth}, #{scale.y(filteredData[filteredData.length-2][spec.field])})\"\n\n    label\n      .attr 'transform', \"translate(#{dimensions[0] - labelWidth}, #{scale.y(filteredData[filteredData.length-2][spec.field])})\"\n\n    updatepoi()\n\n  resize: resize\n  provideMax: provideMax\n","d3 = require 'd3'\nmoment = require 'moment'\nneighbours = require '../util/neighbours'\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub, scale, axis } = options\n\n  svg = dom.append 'g'\n\n  data = data.map (d) ->\n    result = time: d.time\n    result[spec.field] = +d[spec.field]\n    result\n\n  data = data.filter (d) -> d[spec.field]?\n\n  getNeighbours = neighbours data, (d) -> d.time\n\n  start = getNeighbours(domain[0])[0]\n  end = getNeighbours(domain[1])\n  end = end[end.length-1]\n\n  filteredData = data.filter (d) ->\n    +d.time >= +start.time and +d.time <= +end.time\n\n  value =\n    x: (d) -> d.time\n    y: (d) -> d[spec.field]\n\n  dotContainer = svg.append 'g'\n\n  dotContainer\n    .selectAll \".dot\"\n    .data filteredData\n    .enter()\n    .append \"circle\"\n    .attr \"class\", \"dot\"\n    .attr \"r\", 3.5\n\n  focus = svg\n    .append 'g'\n    .attr 'class', 'focus'\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val-shad'\n    .attr 'display', 'none'\n    .attr 'dy', '-0.3em'\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val'\n    .attr 'display', 'none'\n    .attr 'dy', '-0.3em'\n\n  poi = null\n  hub.on 'poi', (p) ->\n    poi = p\n    updatepoi()\n\n  provideMax = ->\n    d3.max filteredData, (d) -> d[spec.field]\n\n  drawDots = (svg, data) ->\n    svg.selectAll \".dot\"\n      .data data\n      .attr \"cx\", (d) -> scale.x value.x d\n      .attr \"cy\", (d) -> scale.y value.y d\n\n  updatepoi = ->\n    if !poi?\n      focus\n        .select '.poi-y-val-shad'\n        .attr 'display', 'none'\n      focus\n        .select '.poi-y-val'\n        .attr 'display', 'none'\n      svg\n        .selectAll '.dot'\n        .data filteredData\n        .style 'fill', 'rgb(20, 44, 88)'\n      return\n\n    Neighbours = neighbours filteredData, (d) -> d.time\n    poiNeighbours = Neighbours poi\n\n    d\n\n    if poiNeighbours.length is 1\n      d = poiNeighbours[0]\n    else if +poiNeighbours[0].time < +domain[0]\n      d = poiNeighbours[1]\n    else if +poiNeighbours[1].time > +domain[1]\n      d = poiNeighbours[0]\n    else\n      d0 = poiNeighbours[0]\n      d1 = poiNeighbours[1]\n      halfway = d0.time + (d1.time - d0.time)/2\n      d = if poi.isBefore(halfway) then d0 else d1\n\n    svg\n      .selectAll '.dot'\n      .data filteredData\n      .style 'fill', (f) ->\n        return 'rgb(216, 34, 42)' if f.time == d.time\n\n    yValWidth = +focus.select('.poi-y-val').node().getComputedTextLength()\n\n    if (dimensions[0] - (scale.x poi)-yValWidth) < yValWidth\n      dxAttr = - yValWidth - 8\n    else\n      dxAttr = 8\n\n    focus\n      .select '.poi-y-val-shad'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{scale.x(d.time)}, #{scale.y(d[spec.field])})\"\n      .attr 'dx', dxAttr\n      .text \"#{d[spec.field].toPrecision(3)} (#{spec.units})\"\n\n    focus\n      .select '.poi-y-val'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{scale.x(d.time)}, #{scale.y(d[spec.field])})\"\n      .attr 'dx', dxAttr\n      .text \"#{d[spec.field].toPrecision(3)} (#{spec.units})\"\n\n  resize = (dimensions) ->\n    dimensions = dimensions\n\n    drawDots dotContainer, filteredData\n\n    updatepoi()\n\n  resize: resize\n  provideMax: provideMax\n","d3 = require 'd3'\nmoment = require 'moment'\ncolorbrewer = require 'colorbrewer'\n\ncalculate_layout = (dimensions) ->\n  dimensions =\n    width: dimensions[0]\n    height: 30\n\n  info =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 200\n\n  title =\n    top: 0\n    right: dimensions.width - info.left\n    bottom: 0\n    left: 0\n    height: dimensions.height\n    width: info.left\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  dimensions: dimensions\n  info: info\n  title: title\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item tablebytime'\n\n  data = data.map (d) ->\n    result = time: d.time\n    result[spec.field] = +d[spec.field]\n    result\n\n  filteredData = data.filter (d) ->\n    +d.time >= +domain[0] and +d.time <= +domain[1]\n\n  scale = d3.time.scale().domain domain\n    .range [0, layout.canvas.width]\n\n  # need to make these equal to the longest string in the data set\n  field =\n    height: 30\n    width: 0\n\n  dataDom = [(d3.min filteredData, (d)-> d[spec.field]), (d3.max filteredData, (d) -> d[spec.field])]\n\n  colorScale = d3.scale.quantize()\n    .range(colorbrewer.Blues[9])\n    .domain dataDom   #scale decided by value extremes, maybe should be set values for different data types?\n\n  textcolorScale = d3.scale.quantize()\n    .range([\"#000000\", \"#000000\", \"#ffffff\", \"#ffffff\"])\n    .domain dataDom\n\n  # colorScale = d3.scale.quantize()\n  #   .range(colorbrewer.Blues[9])\n  #   .domain [0, 360]\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.title.left},#{layout.title.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text spec.text\n    .attr 'dy', 18\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'line'\n    .attr 'class', 'divider'\n    .attr 'x1', 0\n    .attr 'x2', 0\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  container =  inner\n    .append 'g'\n    .attr 'class', 'container'\n\n  cells = null\n\n  create_cells = ->\n    bisector = d3.bisector((d) -> d.time).left\n    data = scale\n      .ticks d3.time.hour, 3\n      .map (d) ->\n        index = bisector filteredData, d\n        filteredData[index]\n      .filter (d) -> d?\n\n    cells = container\n      .selectAll 'g.cell'\n      .data data\n\n    cellsEnter = cells\n      .enter()\n      .append 'g'\n      .attr 'class', 'cell'\n      .attr 'class', (d) ->\n        hour = d.time.local().get('hour')\n        if hour % 12 is 0\n          'cell priority1'\n        else if hour % 6 is 0\n          'cell priority2'\n        else if hour % 3 is 0\n          'cell priority3'\n\n    cellsEnter\n      .append 'rect'\n      .attr 'height', field.height - 1\n      .style 'fill', (d) ->  colorScale d[spec.field]\n\n    cellsEnter\n      .append 'text'\n      .attr 'y', field.height/2\n      .attr 'dy', '0.35em'\n      .text (d) -> d[spec.field]\n      .style 'fill', (d) -> textcolorScale d[spec.field]\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n    scale.range [0, layout.canvas.width]\n\n    bisector = d3.bisector((d) -> d.time).left\n\n    data = scale\n      .ticks d3.time.hour, 3\n      .map (d) ->\n        index = bisector filteredData, d\n        filteredData[index]\n      .filter (d) -> d?\n\n    p1 = container.selectAll '.priority1'\n    p2 = container.selectAll '.priority2'\n    p3 = container.selectAll '.priority3'\n\n    minLabelWidth = 31\n    p1widths = p1[0].length * minLabelWidth\n    p2widths = p2[0].length * minLabelWidth\n    p3widths = p3[0].length * minLabelWidth\n    switch\n      when p1widths + p2widths + p3widths <= layout.canvas.width\n        p2.attr 'display', 'inline'\n        p3.attr 'display', 'inline'\n        field.width = layout.canvas.width / (p1[0].length + p2[0].length + p3[0].length)\n      when p1widths + p2widths <= layout.canvas.width\n        p2.attr 'display', 'inline'\n        p3.attr 'display', 'none'\n        field.width = layout.canvas.width / (p1[0].length + p2[0].length)\n      when p1widths <= layout.canvas.width\n        p3.attr 'display', 'none'\n        p2.attr 'display', 'none'\n        field.width = layout.canvas.width / p1[0].length\n\n    cells = container\n      .selectAll 'g.cell'\n      .data data\n\n    cells\n      .attr 'transform', (d) -> \"translate(#{scale(d.time) - field.width/2}, 0)\"\n\n    container.selectAll '.cell rect'\n      .attr 'width', field.width - 1\n\n    container.selectAll '.cell text'\n      .attr 'x', field.width/2\n\n  create_cells()\n\n  resize dimensions\n\n  resize: resize\n","d3 = require 'd3'\nmoment = require 'moment'\n\ncalculate_layout = (dimensions) ->\n  margin =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 0\n\n  dimensions =\n    width: dimensions[0]\n    height: 25\n\n  info =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 200\n\n  title =\n    top: 0\n    right: dimensions.width - info.left\n    bottom: 0\n    left: 0\n    height: dimensions.height\n    width: info.left\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  margin: margin\n  dimensions: dimensions\n  info: info\n  title: title\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item timeheadings'\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.title.left},#{layout.title.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .attr 'dy', 20\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'line'\n    .attr 'class', 'divider'\n    .attr 'x1', 0\n    .attr 'x2', 0\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  inner\n    .append 'g'\n    .attr 'class', 'axis'\n    .attr \"transform\", \"translate(0,#{-layout.canvas.top})\"\n\n  scale = d3.time.scale().domain domain\n\n  axis = d3\n    .svg\n    .axis()\n    .scale scale\n    .ticks(d3.time.hour, 6)\n    .tickFormat(d3.time.format '%H')\n\n  focus = inner\n    .append 'g'\n    .attr 'class', 'focus'\n\n  focus\n    .append 'line'\n    .attr 'class', 'poi'\n    .attr 'display', 'none'\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val-shad'\n    .attr 'display', 'none'\n    .attr 'dx', '-1.3em'\n    .attr 'dy', 2\n\n  focus\n    .append 'text'\n    .attr 'class', 'poi-y-val'\n    .attr 'display', 'none'\n    .attr 'dx', '-1.3em'\n\n  getTimezone = moment scale.domain()[0]\n\n  svg\n    .select '.infotext'\n    .text spec.text + ' (GMT' + getTimezone.format('Z') + ')' # or ZZ for +1300\n\n  poi = null\n  hub.on 'poi', (p) ->\n    poi = p\n    updatepoi()\n\n  poifsm =\n    hide: ->\n      return if poi is null\n      hub.emit 'poi', null\n\n    show: (x) ->\n      range = scale.range()\n      return poifsm.hide() if range[0] > x or range[1] < x\n      d = scale.invert x\n\n      return if poi is d\n      hub.emit 'poi', moment d\n\n    update: ->\n      x = d3.mouse(inner.node())[0]\n      # Only update if enough drag\n      if poifsm.startx?\n        dist = Math.abs poifsm.startx - x\n        return if dist < 10\n      poifsm.startx = null\n      poifsm.show x\n    mousedown: ->\n      x = d3.mouse(inner.node())[0]\n      return poifsm.show x if !poifsm.currentx?\n      poifsm.startx = x\n    mouseup: ->\n      return if !poifsm.startx?\n      if !poifsm.currentx\n        poifsm.startx = null\n        return poifsm.hide()\n      dist = Math.abs poifsm.startx - poifsm.currentx\n      if dist < 10\n        poifsm.startx = null\n        return poifsm.hide()\n      x = d3.mouse(inner.node())[0]\n      poifsm.show x\n\n  drag = d3.behavior.drag()\n    .on 'drag', poifsm.update\n\n  focus\n    .append 'rect'\n    .attr 'class', 'foreground'\n    .style 'fill', 'none'\n    .on 'mousedown', poifsm.mousedown\n    .on 'mouseup', poifsm.mouseup\n    .call drag\n\n  updatepoi = ->\n    if !poi?\n      poifsm.currentx = scale poi\n      focus\n        .select 'line.poi'\n        .attr 'display', 'none'\n\n      focus\n        .select '.poi-y-val-shad'\n        .attr 'display', 'none'\n\n      focus\n        .select '.poi-y-val'\n        .attr 'display', 'none'\n      return\n\n    poifsm.currentx = scale poi\n\n    focus\n      .select 'line.poi'\n      .attr 'display', null\n      .attr 'x1', scale poi\n      .attr 'x2', scale poi\n\n    if (layout.canvas.width - scale poi) < 20\n      xVal = layout.canvas.width - 20\n    else if (layout.canvas.left + scale poi) < 225\n      xVal =  25\n    else\n      xVal = scale poi\n\n    focus\n      .select '.poi-y-val-shad'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{xVal},#{layout.canvas.height - 6})\"\n      .text poi.format('HH:mm')\n\n    focus\n      .select '.poi-y-val'\n      .attr 'display', null\n      .attr 'transform', \"translate(#{xVal},#{layout.canvas.height - 6})\"\n      .text poi.format('HH:mm')\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n    scale.range [0, layout.canvas.width]\n\n    inner\n      .select '.axis'\n      .call (axis.tickSize layout.canvas.height/4, -layout.canvas.height)\n\n    focus\n      .select '.foreground'\n      .attr 'height', layout.canvas.height\n      .attr 'width', layout.canvas.width\n\n    inner.select '.axis .domain'\n      .remove()\n\n    updatepoi()\n\n  resize dimensions\n\n  resize: resize\n","module.exports = (delay, fn) ->\n  timeout = null\n  ->\n    clearTimeout timeout if timeout > -1\n    timeout = setTimeout fn, delay","module.exports = ->\n  listeners = {}\n  on: (id, listener) ->\n    listeners[id] = [] if !listeners[id]?\n    listeners[id].push listener\n  emit: (id, args...) ->\n    return if !listeners[id]?\n    h args... for h in listeners[id]\n","module.exports = (data, f) ->\n  (value) ->\n    value = +value\n    return [] if data.length is 0 or +f(data[0])> value or +f(data[data.length-1]) < value\n    last = null\n    for d in data\n      fd = +f(d)\n      return [d] if fd == value\n      return [last, d] if value < fd\n      last = d","module.exports = ->\n  documentElement = document.documentElement\n  body = document.getElementsByTagName('body')[0]\n  [\n    parseInt window.innerWidth || documentElement.clientWidth || body.clientWidth\n    -2 + parseInt window.innerHeight || documentElement.clientHeight|| body.clientHeight\n  ]\n","d3 = require 'd3'\n\ncalculate_layout = (dimensions) ->\n  dimensions =\n    width: dimensions[0]/1.5\n    height: 400\n\n  info =\n    top: 0\n    right: 0\n    bottom: 20\n    left: 200\n\n  title =\n    top: 0\n    right: dimensions.width - info.left\n    bottom: 0\n    left: 0\n    height: dimensions.height\n    width: info.left\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  dimensions: dimensions\n  info: info\n  title: title\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item histogram'\n\n  data = data.map (d) ->\n    result =\n      time : d.time\n      wsp : +d.wsp\n      wd : +d.wd\n    result\n\n  data = data.filter (d) -> return d if d.wd? and d.wsp?\n\n  filteredData = data.filter (d) ->\n    +d.time >= +domain[0] and +d.time <= +domain[1]\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.title.left},#{layout.title.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text \"#{spec.text}\"\n    .attr 'dy', 20\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'line'\n    .attr 'class', 'divider'\n    .attr 'x1', 0\n    .attr 'x2', 0\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n  inner\n    .append 'g'\n    .attr 'class', 'x axis'\n    .attr 'transform', \"translate(0,#{layout.canvas.height})\"\n\n  inner\n    .append 'g'\n    .attr 'class', 'y axis'\n\n  clipId = \"clip-#{Math.floor(Math.random() * 1000000)}\"\n\n  chart = inner\n    .append 'g'\n    .attr 'class', 'chart'\n\n  chart\n    .append 'defs'\n    .append 'rect'\n    .attr 'x', '0'\n    .attr 'y', '0'\n    .attr 'width', layout.canvas.width\n    .attr 'height', layout.canvas.height\n\n  frequency =\n    N: []\n    NNE: []\n    NE: []\n    ENE: []\n    E: []\n    ESE: []\n    SE: []\n    SSE: []\n    S: []\n    SSW: []\n    SW: []\n    WSW: []\n    W: []\n    WNW: []\n    NW: []\n    NNW: []\n\n  colorScale = d3.scale.quantize()\n    .range ['#E4EAF1', '#D1D8E3', '#BEC7D5', '#ABB6C7', '#98A5B9', '#8594AB', '#73829E', '#607190', '#4D6082', '#3A4E74', '#273D66', '#142C58', '#122851', '#102448']\n    .domain [0, 13]\n\n  textcolorScale = d3.scale.quantize()\n    .range ['#000000', '#000000', '#ffffff', '#ffffff']\n    .domain [0, 13]\n\n  calculate_direction = (degree) ->\n    direction = Math.floor (degree/22.5) + 0.5\n    text = [\n      'N',\n      'NNE',\n      'NE',\n      'ENE',\n      'E',\n      'ESE',\n      'SE',\n      'SSE',\n      'S',\n      'SSW',\n      'SW',\n      'WSW',\n      'W',\n      'WNW',\n      'NW',\n      'NNW'\n    ]\n\n    textDirection = text[(direction %% 16)]\n\n  for d in filteredData\n    dir = calculate_direction d.wd\n    frequency[dir].push d\n\n  _speedArray =\n      '0-4': []\n      '5-9': []\n      '10-14': []\n      '15-19': []\n      '20-24': []\n      '25-29': []\n      '30-34': []\n      '35-39': []\n      '40-44': []\n      '45-49': []\n      '50-54': []\n      '55-59': []\n      '60-64': []\n      '65+': []\n\n  calculate_speed_category = (speed) ->\n    cat = switch\n      when speed < 5 then '0-4'\n      when speed < 10 then '5-9'\n      when speed < 15 then '10-14'\n      when speed < 20 then '15-19'\n      when speed < 25 then '20-24'\n      when speed < 30 then '25-29'\n      when speed < 35 then '30-34'\n      when speed < 45 then '35-39'\n      when speed < 50 then '40-44'\n      when speed < 55 then '45-49'\n      when speed < 60 then '50-54'\n      when speed < 65 then '55-59'\n      when speed < 70 then '60-64'\n      else '65+'\n\n  getSpeeds = (dir, items) ->\n    speedArray = {}\n    for cat, _ of _speedArray\n      speedArray[cat] = []\n\n    for i in items\n      cat = calculate_speed_category i.wsp\n      speedArray[cat].push i\n\n    start = 0\n    count = 0\n    for cat, bits of speedArray\n      result =\n        index: count\n        start: start\n        end: start + bits.length\n        value: bits.length\n      start = result.end\n      count++\n      result\n\n  groupedData = []\n  angle = 0\n\n  for dir, items of frequency\n    groupedData.push\n      key: angle\n      value: dir\n      count: items.length\n      speeds: getSpeeds dir, items\n    angle += 22.5\n\n  for i, cat of Object.keys _speedArray\n    max = null\n    maxItem = null\n    for dir in groupedData\n      item = dir.speeds[i]\n      if item.value isnt 0\n        if maxItem is null or item.value > max\n          max = item.value\n          maxItem = item\n    maxItem.legend = cat if maxItem?\n\n\n  scale =\n    x: d3.scale.ordinal().domain(groupedData.map (d) -> d.value)\n    y: d3.scale.linear().domain([0, 1.1 * d3.max groupedData, (d) -> d.count])\n\n  axis =\n    x : d3.svg.axis().scale(scale.x).orient 'bottom'\n    y : d3.svg.axis().scale(scale.y).orient 'left'\n\n  chart\n    .append 'text'\n    .attr 'class', 'legend'\n    .attr 'text-anchor', 'end'\n\n  getMaxObj = ->\n    for d in groupedData\n      if d.count == (d3.max groupedData, (d) -> d.count)\n        return d\n\n  resize = (dimensions) ->\n    layout = calculate_layout dimensions\n\n    svg\n      .attr 'width', layout.dimensions.width\n      .attr 'height', layout.dimensions.height\n\n    scale.x.rangeRoundBands([0, layout.canvas.width], 0.05)\n    scale.y.range [layout.canvas.height, 0]\n\n    bars = chart\n      .selectAll '.bar'\n      .data groupedData\n      .enter()\n      .append 'g'\n      .attr 'class', 'bar'\n      .attr 'transform', (d) -> \"translate(#{scale.x d.value}, 0)\"\n\n    bars\n      .selectAll 'rect'\n      .data (d)-> d.speeds\n      .enter()\n      .append 'rect'\n      .attr 'x', 0\n      .attr 'y', (d) -> scale.y d.end\n      .attr \"width\", scale.x.rangeBand()\n      .attr 'height', (d) -> scale.y(d.start) - scale.y(d.end)\n      .style 'fill', (d) -> colorScale d.index\n\n    bars\n      .selectAll 'text'\n      .data (d) -> d.speeds.filter (s) -> s.legend\n      .enter()\n      .append 'text'\n      .attr 'x', scale.x.rangeBand()/2\n      .attr 'y', (d) -> scale.y d.end\n      .attr 'dy', '1.1em'\n      .style 'text-anchor', 'middle'\n      .style 'fill', (d) -> textcolorScale d.index\n      .text (d) -> d.legend\n\n    inner\n      .select '.x.axis'\n      .call axis.x\n\n    inner\n      .select '.y.axis'\n      .call axis.y.tickSize -layout.canvas.width, 0, 0\n\n    inner\n      .selectAll '.y.axis .tick line'\n      .data scale.y.ticks axis.y.ticks()[0]\n      .attr 'class', (d) ->\n        if d is 0 then 'zero' else null\n\n    inner\n      .select '.y.axis .domain'\n      .remove()\n\n    max = getMaxObj()\n\n    chart\n      .select '.legend'\n      .attr 'x', scale.x max.value\n      .attr 'y', scale.y max.count\n      .text \"#{max.count} SOMETHING?\"\n\n  resize dimensions\n  resize: resize","d3 = require 'd3'\ncolorbrewer = require 'colorbrewer'\n\ncalculate_layout = (dimensions) ->\n  dimensions =\n    width: dimensions[0]\n    height: 450\n\n  info =\n    top: 0\n    right: 0\n    bottom: 13\n    left: 200\n\n  canvas =\n    top: info.top\n    right: info.right\n    bottom: info.bottom\n    left: info.left\n    width: dimensions.width - info.left - info.right\n    height: dimensions.height - info.top - info.bottom\n\n  dimensions: dimensions\n  info: info\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item table'\n\n  # data = data.map (d) ->\n  #   result =\n  #     time : d.time\n  #     wsp : +d.wsp\n  #   result\n\n  # data = data.filter (d) -> return d.wsp?\n\n  # filteredData = data.filter (d) ->\n  #   +d.time >= +@domain[0] and +d.time <= +@domain[1]\n\n  svg\n    .attr 'width', layout.dimensions.width\n    .attr 'height', layout.dimensions.height\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text spec.text\n    .attr 'dy', 20\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left},#{layout.canvas.top})\"\n\n  inner\n    .append 'line'\n    .attr 'class', 'divider'\n    .attr 'x1', 0\n    .attr 'x2', 0\n    .attr 'y1', 0\n    .attr 'y2', layout.dimensions.height\n\n   # need to make these equal to the longest string in the data set\n  field =\n    height: 30\n    width: 70\n\n  container =  inner\n    .append 'g'\n    .attr 'class', 'container'\n    .attr 'transform', \"translate(10, 10)\"\n\n  topheaderGrp = container\n    .append 'g'\n    .attr 'class', 'topheaderGrp'\n\n  sideheaderGrp = container\n    .append 'g'\n    .attr 'class', 'sideheaderGrp'\n\n  rowsGrp = container\n    .append 'g'\n    .attr 'class', 'rowsGrp'\n    .attr 'transform', \"translate(#{field.width*0.75}, #{field.height*0.85})\"\n\n  data = {\n    dir: {\n      N: [\n        0.90\n        2.74\n        3.12\n        1.98\n        0.93\n        0.42\n        0.16\n        0.03\n        0.00\n        0.00\n        0.00\n        0.00\n        0.00\n      ]\n      NE: [\n        0.89\n        3.14\n        5.51\n        4.38\n        1.68\n        0.48\n        0.09\n        0.01\n        0.00\n        0.00\n        0.00\n        0.00\n        0.00\n      ]\n      E: [\n        0.80\n        2.43\n        4.07\n        3.84\n        2.08\n        0.70\n        0.13\n        0.02\n        0.01\n        0.00\n        0.00\n        0.00\n        0.00\n      ]\n      SE: [\n        0.71\n        1.53\n        1.63\n        0.95\n        0.46\n        0.13\n        0.04\n        0.01\n        0.00\n        0.00\n        0.00\n        0.00\n        0.00\n      ]\n      S: [\n        0.67\n        1.45\n        1.73\n        1.30\n        0.70\n        0.39\n        0.16\n        0.05\n        0.01\n        0.00\n        0.00\n        0.00\n        0.00\n      ]\n      SW: [\n        0.72\n        2.35\n        3.67\n        4.05\n        3.23\n        2.18\n        1.17\n        0.47\n        0.17\n        0.05\n        0.01\n        0.00\n        0.00\n      ]\n      W: [\n        0.91\n        2.72\n        4.00\n        4.08\n        2.94\n        1.77\n        0.85\n        0.31\n        0.10\n        0.02\n        0.00\n        0.00\n        0.00\n      ]\n      NW: [\n        0.83\n        2.61\n        3.17\n        2.56\n        1.45\n        0.72\n        0.30\n        0.11\n        0.02\n        0.01\n        0.00\n        0.00\n        0.00\n      ]\n    }\n    cat: [\n      '0-5'\n      '5-10'\n      '10-15'\n      '15-20'\n      '20-25'\n      '25-30'\n      '30-35'\n      '35-40'\n      '40-45'\n      '45-50'\n      '50-55'\n      '55-60'\n      '60-65'\n    ]\n  }\n\n  rowData = []\n  dirkeys = Object.keys data.dir\n  for cat, index in data.cat\n    rowData.push dirkeys.map (dir) -> data.dir[dir][index]\n\n  colorScale = d3.scale.quantize()\n    .range colorbrewer.Blues[9]\n    .domain [-0.75, 9]\n\n  textcolorScale = d3.scale.quantize()\n    .range [\"#000000\", \"#000000\", \"#000000\", \"#ffffff\", \"#ffffff\"]\n    .domain [-0.75, 9]\n\n  topheader = topheaderGrp\n    .selectAll 'g'\n    .data d3.keys data.dir\n    .enter()\n    .append 'g'\n    .attr 'class', 'header top'\n    .attr 'transform', (d, i) -> \"translate(#{(i + 0.65)*field.width},0)\"\n\n  topheader.append 'rect'\n    .attr 'width', field.width - 1\n    .attr 'height', field.height\n\n  topheader.append 'text'\n    .attr 'x', field.width/2\n    .attr 'y', field.height/2\n    .attr 'dy', '0.35em'\n    .text String\n\n  sideheader = sideheaderGrp\n    .selectAll 'g'\n    .data data.cat, (d) -> d3.values d\n    .enter()\n    .append 'g'\n    .attr 'class', 'header side'\n    .attr 'transform', (d, i) -> \"translate(0, #{(i + 0.75)*(field.height)})\"\n\n  sideheader.append 'rect'\n    .attr 'width', field.width - 1\n    .attr 'height', field.height\n\n  sideheader.append 'text'\n    .attr 'x', field.width/2\n    .attr 'y', field.height/2\n    .attr 'dy', '0.35em'\n    .text String\n\n  row = rowsGrp\n    .selectAll 'g.row'\n    .data rowData\n\n  row\n    .enter()\n    .append 'g'\n    .attr 'class', 'row'\n    .attr 'transform', (d, i) -> \"translate(0, #{i*field.height})\"\n\n  cells = row.selectAll 'g.cell'\n    .data (d) -> d\n\n  cellsEnter = cells\n    .enter()\n    .append 'g'\n    .attr 'class', 'cell'\n    .attr 'transform', (d, i) -> \"translate(#{i*field.width}, 0)\"\n\n  cellsEnter\n    .append 'rect'\n    .attr 'width', field.width - 1\n    .attr 'height', field.height - 1\n    .style 'fill', colorScale\n\n  cellsEnter\n    .append 'text'\n    .attr 'x', field.width/2\n    .attr 'y', field.height/2\n    .attr 'dy', '0.35em'\n    .text String\n    .style 'fill', textcolorScale\n","d3 = require 'd3'\n\ncalculate_layout = (dimensions) ->\n  dimensions =\n    width: 600\n    height: 400\n\n  info =\n    top: 0\n    right: 0\n    bottom: 0\n    left: 200\n\n  title =\n    top: 0\n    right: dimensions.width - info.left\n    bottom: 0\n    left: 0\n    height: dimensions.height\n    width: info.left\n\n  canvas =\n    top: info.top + 25\n    right: info.right - 50\n    bottom: info.bottom - 50\n    left: info.left + 25\n    width: dimensions.width - info.left - info.right - 50\n    height: dimensions.height - info.top - info.bottom - 50\n\n  dimensions: dimensions\n  info: info\n  title: title\n  canvas: canvas\n\nmodule.exports = (dom, options) ->\n  { components, spec, dimensions, data, domain, hub } = options\n  layout = calculate_layout dimensions\n\n  svg = d3.select dom\n    .append 'svg'\n    .attr 'class', 'item windrose'\n\n  data = data.map (d) ->\n    result =\n      time : d.time\n      wsp : +d.wsp\n      wd : +d.wd\n    result\n\n  data = data.filter (d) -> return d if d.wd? and d.wsp?\n\n  filteredData = data.filter (d) ->\n    +d.time >= +domain[0] and +d.time <= +domain[1]\n\n  svg\n    .attr 'width', layout.dimensions.width\n    .attr 'height', layout.dimensions.height\n\n  svg\n    .append 'g'\n    .attr 'class', 'title'\n    .attr 'transform', \"translate(#{layout.title.left},#{layout.title.top})\"\n    .append 'text'\n    .attr 'class', 'infotext'\n    .text spec.text\n    .attr 'dy', 18\n    .attr 'dx', 5\n\n  inner = svg\n    .append 'g'\n    .attr 'class', 'inner'\n    .attr 'transform', \"translate(#{layout.canvas.left + layout.canvas.width/2},#{layout.canvas.top + layout.canvas.height/2})\"\n\n  frequency =\n    N: []\n    NNE: []\n    NE: []\n    ENE: []\n    E: []\n    ESE: []\n    SE: []\n    SSE: []\n    S: []\n    SSW: []\n    SW: []\n    WSW: []\n    W: []\n    WNW: []\n    NW: []\n    NNW: []\n\n  colorScale = d3.scale.quantize()\n    .range ['#E4EAF1', '#D1D8E3', '#BEC7D5', '#ABB6C7', '#98A5B9', '#8594AB', '#73829E', '#607190', '#4D6082', '#3A4E74', '#273D66', '#142C58', '#122851', '#102448']\n    .domain [0, 13]\n\n  textcolorScale = d3.scale.quantize()\n    .range ['#000000', '#000000', '#ffffff', '#ffffff']\n    .domain [0, 13]\n\n  calculate_direction = (degree) ->\n    direction = Math.floor (degree/22.5) + 0.5\n    text = [\n      'N',\n      'NNE',\n      'NE',\n      'ENE',\n      'E',\n      'ESE',\n      'SE',\n      'SSE',\n      'S',\n      'SSW',\n      'SW',\n      'WSW',\n      'W',\n      'WNW',\n      'NW',\n      'NNW'\n    ]\n\n    textDirection = text[(direction %% 16)]\n\n  calculate_speed_category = (speed) ->\n    cat = switch\n      when speed < 5 then '0-4'\n      when speed < 10 then '5-9'\n      when speed < 15 then '10-14'\n      when speed < 20 then '15-19'\n      when speed < 25 then '20-24'\n      when speed < 30 then '25-29'\n      when speed < 35 then '30-34'\n      when speed < 45 then '35-39'\n      when speed < 50 then '40-44'\n      when speed < 55 then '45-49'\n      when speed < 60 then '50-54'\n      when speed < 65 then '55-59'\n      when speed < 70 then '60-64'\n      else '65+'\n\n  for d in filteredData\n    dir = calculate_direction d.wd\n    frequency[dir].push d\n\n  getSpeeds = (dir, items) ->\n    speedArray =\n      '0-4': []\n      '5-9': []\n      '10-14': []\n      '15-19': []\n      '20-24': []\n      '25-29': []\n      '30-34': []\n      '35-39': []\n      '40-44': []\n      '45-49': []\n      '50-54': []\n      '55-59': []\n      '60-64': []\n      '65+': []\n\n    for i in items\n      cat = calculate_speed_category i.wsp\n      speedArray[cat].push i\n\n    start = 0\n    count = 0\n    for cat, bits of speedArray\n      result =\n        index: count\n        start: start\n        end: start + bits.length\n      start = result.end\n      count++\n      result\n\n  groupedData = []\n  angle = 0\n\n  for dir, items of frequency\n    groupedData.push\n      key: angle\n      value: dir\n      count: items.length\n      speeds: getSpeeds(dir, items)\n    angle += 22.5\n\n  scale = d3\n    .scale\n    .linear()\n    .domain [0, 1.1 * d3.max groupedData, (d) -> d.count]\n    .range [0, layout.canvas.width/2]\n\n  diameter = (scale scale.domain()[1]) - 5\n\n  circlecontainer = inner\n    .append 'g'\n    .attr 'class', 'circlecontainer'\n\n  circlecontainer\n    .append 'circle'\n    .attr 'cx', 0\n    .attr 'cy', 0\n    .attr 'r', diameter - 120\n\n  circlecontainer\n    .append 'circle'\n    .attr 'cx', 0\n    .attr 'cy', 0\n    .attr 'r', diameter - 80\n\n  circlecontainer\n    .append 'circle'\n    .attr 'cx', 0\n    .attr 'cy', 0\n    .attr 'r', diameter - 40\n    .text diameter - 40\n\n  circlecontainer\n    .append 'circle'\n    .attr 'cx', 0\n    .attr 'cy', 0\n    .attr 'r', diameter\n\n  axis = inner\n    .selectAll '.axis'\n    .data [\n        { key: 0, value: 'N' }\n        { key: 45, value: 'NE' }\n        { key: 90, value: 'E' }\n        { key: 135, value: 'SE' }\n        { key: 180, value: 'S' }\n        { key: 225, value: 'SW' }\n        { key: 270, value: 'W' }\n        { key: 315, value: 'NW' }\n      ]\n    .enter()\n    .append 'g'\n    .attr 'class', 'axis'\n    .attr 'transform', (d) -> \"rotate(#{d.key})\"\n\n  arc = (o) ->\n    d3\n    .svg\n    .arc()\n    .startAngle (d) ->(- o.width / 2) * Math.PI/180\n    .endAngle (d) -> (+ o.width / 2) * Math.PI/180\n    .innerRadius o.from\n    .outerRadius o.to\n\n  axis\n    .append 'line'\n    .attr 'class', 'spoke'\n    .attr 'x1', scale 0\n    .attr 'y1', scale 0\n    .attr 'x2', scale 0\n    .attr 'y2', layout.canvas.width/2\n\n  axis\n    .append 'g'\n    .attr 'transform', (d) -> \"translate(#{scale 0},#{(layout.canvas.height * (-0.53))})\"\n    .append 'text'\n    .attr 'transform', (d) -> \"rotate(#{-d.key})\"\n    .attr 'style', 'text-anchor: middle'\n    .attr 'dy', '0.25em'\n    .text (d) -> d.value\n\n\n  segment = inner\n    .selectAll '.segment'\n    .data groupedData\n    .enter()\n    .append 'g'\n    .attr 'class', 'segment'\n    .attr 'transform', (d) -> \"rotate(#{d.key})\"\n    .selectAll 'path'\n    .data (d) -> d.speeds\n    .enter()\n    .append 'path'\n    .attr('d', arc\n      width: 360 / 24 * 0.8\n      from: (d) -> scale d.start\n      to: (d) -> scale d.end\n    )\n    .style 'fill', (d) -> colorScale d.index\n\n  circlecontainer\n    .append 'text'\n    .text 0\n    .attr 'x', 0\n    .attr 'y', 0\n\n  circlecontainer\n    .append 'text'\n    .text diameter - 120\n    .attr 'x', 0\n    .attr 'y', -(diameter - 120)\n\n  circlecontainer\n    .append 'text'\n    .text diameter - 80\n    .attr 'x', 0\n    .attr 'y', -(diameter - 80)\n\n  circlecontainer\n    .append 'text'\n    .text diameter - 40\n    .attr 'x', 0\n    .attr 'y', -(diameter - 40)\n\n  circlecontainer\n    .append 'text'\n    .text diameter\n    .attr 'x', 0\n    .attr 'y', -diameter\n\n\n"],"sourceRoot":"/source/"}