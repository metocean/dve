// Generated by CoffeeScript 1.9.2

/*

List components.
 */
module.exports = function(spec, components) {
  var item, items, j, len, list, s;
  if (!(spec instanceof Array)) {
    spec = [spec];
  }
  items = [];
  for (j = 0, len = spec.length; j < len; j++) {
    s = spec[j];
    if (components[s.type] == null) {
      return console.error(s.type + " component not found");
    }
    item = components[s.type](s, components);
    items.push(item);
  }
  return list = {
    render: function(dom, state, params) {
      var k, len1, results;
      results = [];
      for (k = 0, len1 = items.length; k < len1; k++) {
        item = items[k];
        results.push(item.render(dom, state, params));
      }
      return results;
    },
    resize: function(dimensions) {
      var i, k, len1, results;
      results = [];
      for (k = 0, len1 = items.length; k < len1; k++) {
        i = items[k];
        if (i.resize == null) {
          continue;
        }
        results.push(i.resize(dimensions));
      }
      return results;
    },
    query: function(params) {
      var k, key, len1, query, ref, result;
      result = {};
      for (k = 0, len1 = items.length; k < len1; k++) {
        item = items[k];
        if (item.query != null) {
          ref = item.query(params);
          for (key in ref) {
            query = ref[key];
            result[key] = query;
          }
        }
      }
      return result;
    }
  };
};
